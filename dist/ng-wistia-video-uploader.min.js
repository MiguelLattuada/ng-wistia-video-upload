(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

(function (ng) {
    var MODULE_NAME = 'wistia-video-uploader';
    // Check angular is correctly loaded
    if (!ng || (ng.version && ng.version.minor < 5)) throw Error('Could not load ' + MODULE_NAME + ' angular >1.5.x is required');
    // Create angular module and component
    angular
        .module(MODULE_NAME, [])
        .component('wistiaVideoUploader', require('./video-uploader/video-uploader'))
        .component('wistiaVideoEmbed', require('./video-embed/video-embed'));
})(window['angular']);
},{"./video-embed/video-embed":3,"./video-uploader/video-uploader":5}],2:[function(require,module,exports){
module.exports = "<div class=\"wistia_responsive_padding\" style=\"padding:55.0% 0 0 0;position:relative;\">\n    <div class=\"wistia_responsive_wrapper\" style=\"height:100%;left:0;position:absolute;top:0;width:100%;\">\n        <iframe ng-src=\"{{ $ctrl.viewModel.iframeSrc }}\" title=\"Wistia video player\" allowtransparency=\"true\"\n            frameborder=\"0\" scrolling=\"no\" class=\"wistia_embed\" name=\"wistia_embed\" allowfullscreen mozallowfullscreen webkitallowfullscreen\n            oallowfullscreen msallowfullscreen width=\"100%\" height=\"100%\"></iframe>\n    </div>\n</div>\n<script src=\"https://fast.wistia.net/assets/external/E-v1.js\" async></script>";

},{}],3:[function(require,module,exports){
'use strict';

module.exports = (function () {
    VideoEmbedComponentController.$inject = ['$sce'];

    function VideoEmbedComponentController($sce) {
        var self = this;
        self.viewModel = { };

        self.$onInit = function() {
        }

        self.$onChanges = function() {
            self.viewModel.iframeSrc = $sce.trustAsResourceUrl(['https://fast.wistia.net/embed/iframe/', self.hashId, '?videoFoam=true'].join(''));
        }
    }

    return {
        template: require('./video-embed.html'),
        controller: VideoEmbedComponentController,
        bindings: {
            hashId: '<'
        }
    };
})();
},{"./video-embed.html":2}],4:[function(require,module,exports){
module.exports = "<form novalidate>\n    <fieldset ng-show=\"!$ctrl.viewModel.currentHashedId\" ng-disabled=\"!$ctrl.viewModel.wistiaUrl\">\n        <legend>Upload a video to Wistia!</legend>\n        <div class=\"video-uploader-pb\">\n            {{ $ctrl.viewModel.progressPercentage || 0 }}%\n        </div>\n        <div class=\"video-uploader-bar\" ng-style=\"$ctrl.viewModel.barStyles\"></div>\n        <input type=\"file\" accept=\"video/*\" class=\"video-uploader-fu\" name=\"files[]\" multiple>\n        <button class=\"video-uploader-btn\" ng-click=\"$ctrl.selectAndUploadFile()\" ng-disabled=\"$ctrl.viewModel.actionInProgress\" ng-bind-template=\"{{ $ctrl.viewModel.actionInProgress ? 'Uploading...': 'Select file' }}\"></button>\n        <span class=\"video-uploder-fn\" ng-if=\"$ctrl.viewModel.selectedFileName\" ng-bind-template=\"{{ $ctrl.viewModel.selectedFileName }}\"></span>\n        <span class=\"video-uploader-msg\" ng-if=\"$ctrl.viewModel.uploadDoneMessage\" ng-class=\"{ error: !$ctrl.viewModel.success }\" ng-bind-template=\"{{ $ctrl.viewModel.uploadDoneMessage }}\"></span>\n    </fieldset>\n    <fieldset ng-show=\"$ctrl.viewModel.currentHashedId\">\n        <wistia-video-embed hash-id=\"$ctrl.viewModel.currentHashedId\"></wistia-video-embed>\n    </fieldset>\n</form>";

},{}],5:[function(require,module,exports){
'use strict';

module.exports = (function () {
    VideoUploaderComponentController.$inject = ['$element', '$scope'];

    function VideoUploaderComponentController($element, $scope) {
        var self = this;
        self.viewModel = {};

        self.$onInit = function () {
            if (self.apiPassword) {
                self.viewModel.wistiaUrl = 'https://upload.wistia.com?api_password=' + self.apiPassword;
            }
        };

        self.$postLink = function () {
            // Save a ref to template, and file upload shortcut
            self.viewRef = $element[0];
            self.$fileUploadInput = self.viewRef.querySelector('input.video-uploader-fu');
            _bindFileUploadEvents(self.viewModel.wistiaUrl);
        };

        /**
         * Trigger file upload click
         */
        self.selectAndUploadFile = function () {
            self.$fileUploadInput.click();
        };

        /**
         * Define onchange handler
         */
        function _onChange(event) {
            var files = Array.from(self.$fileUploadInput.files);
            if (files && files.length) {
                $scope.$apply(function () {
                    self.viewModel.selectedFileName = files.reduce(function(acc, file, index, array) {
                        var concat = !index ? file.name : ', ' + file.name
                        return acc.concat(concat);
                    }, '');
                    self.viewModel.success = false;
                });
            }
        }

        /**
         * Define on file upload start event
         */
        function _onStart() {
            $scope.$apply(function () {
                self.viewModel.actionInProgress = true;
                self.viewModel.currentHashedId = undefined;
            });
        }

        /**
         * Define on file upload progress event
         */
        function _onProgress(event, data) {
            $scope.$apply(function () {
                self.viewModel.progressPercentage = parseInt(data.loaded / data.total * 100, 10);
                self.viewModel.barStyles = { 'width': self.viewModel.progressPercentage + '%' };
            });
        }

        /**
         * Define on file upload done event
         */
        function _onSuccess(e, data) {
            $scope.$apply(function () {
                _restoreViewData();
                self.viewModel.success = true;
                self.viewModel.uploadDoneMessage = 'Video successfully updated';
                self.viewModel.currentHashedId = data ? data.response().result.hashed_id: undefined;
            });
        }

        /**
         * Define on file upload error event
         */
        function _onError() {
            $scope.$apply(function () {
                _restoreViewData();
                self.viewModel.uploadDoneMessage = 'Oops! An error has occurred, try again';
            });
        }

        /**
         * Restore common view model attributes
         */
        function _restoreViewData() {
            self.viewModel.progressPercentage = undefined;
            self.viewModel.actionInProgress = false;
            self.viewModel.selectedFileName = '';
            self.$fileUploadInput.value = '';
            self.viewModel.barStyles = { 'width': '0%' };
        }

        /**
         * Bind events for file upload
         */
        function _bindFileUploadEvents(url) {
            $('input.video-uploader-fu').fileupload({
                url: url
            })
                .bind('fileuploadchange', _onChange)
                .bind('fileuploadstart', _onStart)
                .bind('fileuploadprogressall', _onProgress)
                .bind('fileuploaddone', _onSuccess)
                .bind('fileuploadfail', _onError);
        }
    }

    return {
        template: require('./video-uploader.html'),
        controller: VideoUploaderComponentController,
        bindings: {
            apiPassword: '<'
        }
    };
})();
},{"./video-uploader.html":4}]},{},[1]);
